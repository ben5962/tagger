#!/bin/bash
#corriger les conneries des repertoires recursifs créés
get_racine(){
local racine=$(find /home/corentin/ -name .tags_dir -empty -execdir bash -c 'while [ "$(basename $(pwd))" = ".tags_dir" ]; do cd .. ; done; pwd' bash {} \;)
echo "$racine"
}

get_rec_dir(){
echo ".tags_dir"
}

verif_resultat(){
find /home/corentin/ -name $(get_rec_dir) -empty
}

remove_empty(){
rac="$(get_racine)"
tree_to_del="${rac}/$(get_rec_dir)"
[ -d "${tree_to_del}" ] && echo "ok" && rm -fr "${tree_to_del}"
verif_resultat
}


# remove_empty: succes!
get_racine(){
local racine=$(find /home/corentin/ -name .tags_dir -execdir bash -c 'while [ "$(basename $(pwd))" = ".tags_dir" ]; do cd .. ; done; pwd' bash {} \;)
echo "$racine"
}

remove_non_empty(){
while read chemin
do
#echo $chemin
tree_to_del="$chemin/$(get_rec_dir)"
[ -d "$tree_to_del" ] && echo "ok" && rm -rf "$tree_to_del"
done < <( get_racine ) # BUG redirection attendue s/^/#!/bin/bash

}

#remove_non_emtpy: succes!
rfktr_list_funcs(){
#[ $# -eq 1 ] || echo "list_funcs \$1" && return 1;
#sed -n 's/\(^[a-zA-Z_]*\)(){/\1/p;' "$1"
#LE_REMPLACEMENT_DE='s/'
#AFFICHER_SEULEMENT=-n -e '
#lettre_ou_underscore="[a-zA-Z_]"
#plusieurs_fois='*'
#debut_de_ligne='^'
#debut_important='\('
#fin_important='\)'
#sed ${AFFICHER_SEULEMENT} ${EXPRESSION} \
#${REMPLACER}${debut_de_ligne}${debut_important}${lettre_ou_underscore}\
#${plusieurs_fois}${fin_important}
sed -n -e 's/^\([a-zA-Z_]*\)(){/\1/ p;' "$1"
#sed -n -e 's/^\('${lettre_ou_underscore}'*\)(){/\1/p;' "$1"

}
export -f rfktr_list_funcs

rfktr_list_all_funcs(){
find . -type f -execdir bash -c 'rfktr_list_funcs $1' bash {} \;
}



rfktr_aff_func(){
sed -n -e '/'$1'(){/,/^}$/ p;' $2
}


rfktr_whereisfunc(){
grep -r "$1(){" --files-with-matches
}
